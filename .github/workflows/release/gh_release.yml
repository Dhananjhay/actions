---
# Assumes:
#   - release-drafter is used to create release notes
#     (see https://github.com/marketplace/actions/release-drafter)
#   - main branch is protected
name: Release package on GH
on:
  workflow_call:
    inputs:
      comments:
        description: Comments
        required: false
        type: string
      project_metadata:
        description: File containing project metadata (e.g. pyproject.toml)
        required: false
        default: pyproject.toml
        type: string
      pipeline_description:
        description: Update pipeline description version
        required: false
        default: false
        type: boolean
    secrets:
      BP_PAT:
        required: true

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Print author
        run: |
          echo "Author: ${{ github.triggering_actor }}"
          echo "Comments: ${{ inputs.comments }}"

      - name: Extract branch
        id: extract-branch
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

      - name: Checkout triggering branch
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.extract-branch.outputs.branch }}

      - name: Draft change log
        uses: release-drafter/release-drafter@v5
        id: release-drafter
        with:
          commitish: ${{ steps.extract-branch.outputs.branch }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set new release version
        env:
          RD_RELEASE: ${{ steps.release-drafter.outputs.name }}
        run: |
          if [ ! -z "$RD_RELEASE" ]; then
            echo "NEW_RELEASE=$RD_RELEASE" >> $GITHUB_ENV
          else
            echo "NEW_RELEASE=0.1.0" >> $GITHUB_ENV
          fi

      - name: Update version in ${{ inputs.project_metadata }}
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: ${{ inputs.project_metadata }}
          find: version = "(?:([0-9]+\.[0-9]+\.[0-9]+.+)|([0-9]+\.[0-9]+\.[0-9]+))"
          replace: version = "${{ env.NEW_RELEASE }}"

      - name: Update pipeline description
        if: inputs.pipeline_description
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          include: "**/pipeline_description.json"
          find: '"Version": "(?:([0-9]+\.[0-9]+\.[0-9]+.+)|([0-9]+\.[0-9]+\.[0-9]+))"'
          replace: '"Version": "${{ env.NEW_RELEASE }}"'

      - name: Commit updates
        env:
          LATEST_VERSION: ${{ env.NEW_RELEASE }}
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git diff-index --quiet HEAD || git commit -m "Bump version to $LATEST_VERSION" -a

      - name: Push changes
        uses: CasperWA/push-protected@v2
        with:
          token: ${{ secrets.BP_PAT }}
          unprotect_reviews: true

      - name: Publish change log
        uses: release-drafter/release-drafter@v5
        with:
          commitish: ${{ steps.extract-branch.outputs.branch }}
          publish: true
          name: ${{ env.NEW_RELEASE }}
          tag: v${{ env.NEW_RELEASE }}
        env:
          GITHUB_TOKEN: ${{ secrets.BP_PAT }}
